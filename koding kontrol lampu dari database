//Terimakasih sudah menonton video saya, jangan lupa ikuti akun-akun saya dibawah ini...
//Youtube.com/LeimanGoVlog
//IG        : sulaimantaqwa.a
//IG        : Tridipi.project
//Blog      :Leimanilmu.blogspot.com
//Tokopedia : Tridipi.project

//Saya juga buka jasa bikin custom project

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266HTTPClient.h>

#define ON_Board_LED 15  //--> Defining an On Board LED (GPIO2 = D4), used for indicators when the process of connecting to a wifi router

#define LED_D8 2         //--> Defines an LED Pin. D8 = GPIO15

//----------------------------------------SSID and Password of your WiFi router.-----------------------------///////////////////////////////////////////
const char* ssid = "wifi anda"; //--> Your wifi name or SSID.
const char* password = "paswword wifi anda"; //--> Your wifi password.
//----------------------------------------

//----------------------------------------Web Server address / IPv4-----------------------/////////////////////////////////////////////
// If using IPv4, press Windows key + R then type cmd, then type ipconfig (If using Windows OS).
const char *host = "http://ip komputer anda/"; //ini bisa diganti ip komputer servernya, dengan cara cek di cmd/ipconfig

//----------------------------------------||||||||||||||||||||||||||||||||||--------------------------------------------

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  delay(500);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password); //--> Connect to your WiFi router
  Serial.println("");

  pinMode(ON_Board_LED, OUTPUT); //--> On Board LED port Direction output
  digitalWrite(ON_Board_LED, HIGH); //--> Turn off Led On Board

  pinMode(LED_D8, OUTPUT); //--> LED port Direction output
  digitalWrite(LED_D8, LOW); //--> Turn off Led

  //----------------------------------------Wait for connection
  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    //----------------------------------------Make the On Board Flashing LED on the process of connecting to the wifi router.
    digitalWrite(ON_Board_LED, LOW);
    delay(250);
    digitalWrite(ON_Board_LED, HIGH);
    delay(250);
    //----------------------------------------
  }
  //----------------------------------------
  digitalWrite(ON_Board_LED, HIGH); //--> Turn off the On Board LED when it is connected to the wifi router.
  //----------------------------------------If successfully connected to the wifi router, the IP Address that will be visited is displayed in the serial monitor
  Serial.println("");
  Serial.print("Successfully connected to : ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  //----------------------------------------
}

void loop() {
  // put your main code here, to run repeatedly:
  HTTPClient http; //--> Declare object of class HTTPClient

  //----------------------------------------Getting Data from MySQL Database
  String GetAddress, LinkGet, getData,LEDStatResultSend;;
  int id = 0; //--> ID in Database
  GetAddress = "led/GetData.php"; //led itu nama folder penyimpanan koding mysql di htdoc
  LinkGet = host + GetAddress; //--> Make a Specify request destination
  getData = "ID=" + String(id);
  Serial.println("----------------Connect to Server-----------------");
  Serial.println("Get LED Status from Server or Database");
  Serial.print("Request Link : ");
  Serial.println(LinkGet);
  http.begin(LinkGet); //--> Specify request destination
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");    //Specify content-type header
  int httpCodeGet = http.POST(getData); //--> Send the request
  String payloadReason = http.getString(); //--> Get the response payload from server
  Serial.print("Response Code : "); //--> If Response Code = 200 means Successful connection, if -1 means connection failed. For more information see here : https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
  Serial.println(httpCodeGet); //--> Print HTTP return code
  Serial.print("Returned data from Server : ");
  Serial.println(payloadReason); //--> Print request response payload

  if (payloadReason == "1") {
    digitalWrite(LED_D8, HIGH); //--> Turn off Led
    LEDStatResultSend = payloadReason;
  }
  if (payloadReason == "0") {
    digitalWrite(LED_D8, LOW); //--> Turn off Led
    LEDStatResultSend = payloadReason;
  }
  //----------------------------------------
  //----------------------------------------Sends LED status feedback data to server
/*
Serial.println();
Serial.println("Sending LED Status to Server");
String postData, LinkSend, SendAddress;
SendAddress = "led/getLEDStatFromNodeMCU.php";
LinkSend = host + SendAddress;
postData = "getLEDStatusFromNodeMCU=" + LEDStatResultSend;
Serial.print("Request Link : ");
Serial.println(LinkSend);
http.begin(LinkSend); //--> Specify request destination
http.addHeader("Content-Type", "application/x-www-form-urlencoded"); //--> Specify content-type header
int httpCodeSend = http.POST(postData); //--> Send the request
String payloadSend = http.getString(); //--> Get the response payload
Serial.print("Response Code : "); //--> If Response Code = 200 means Successful connection, if -1 means connection failed
Serial.println(httpCodeSend); //--> Print HTTP return code
Serial.print("Returned data from Server : ");
Serial.println(payloadSend); //--> Print request response payload
*/
//----------------------------------------

  Serial.println("----------------Closing Connection----------------");
  //http.end(); //--> Close connection
  Serial.println();
  Serial.println("Please wait 5 seconds for the next connection.");
  Serial.println();
  delay(5000); //--> GET Data at setiap 5 detik
}
